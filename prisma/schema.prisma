// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
}

enum Provider {
  CREDENTIALS
  GITHUB
}

model User {
  id            String     @id() @default(uuid())
  name          String
  role          Role[]     @default([USER])
  email         String     @unique
  image         String?
  provider      Provider[] @default([])
  password      String?
  emailVerified Boolean    @default(false)
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt()
  Board         Board[]
}

model Board {
  id        String   @id @default(uuid())
  title     String
  color     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  lists     List[]
}

model List {
  id        String   @id @default(uuid())
  title     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  boardId   String
  board     Board    @relation(fields: [boardId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  cards     Card[]
}

model Card {
  id        Int      @id @default(autoincrement())
  title     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  listId    String
  list      List     @relation(fields: [listId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}
